#########################################################################################################################
##                                                                                                                     ##
##                                                    IPBRICK-DEVOPS                                                   ##
##                                                                                                                     ##
##                                                                                                                     ##
##                                                                                    IPBRICK by EXPANDINDUSTRIA 2025  ##
#########################################################################################################################

services:

#########################################################################################################################
##                                                                                                                     ##
##                                                       PORTAINER                                                     ##
##                                                                                                                     ##
#########################################################################################################################
  portainer:
    image: portainer/portainer-ce:2.20.3
    container_name: portainer
    ports:
      - 15200:9000
    # command: --admin-password 'R0llaBill#2025'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always
 
#########################################################################################################################
##                                                                                                                     ##
##                                                        GRAFANA                                                      ##
##                                                                                                                     ##
#########################################################################################################################
  grafana:
    image: grafana/grafana:11.1.4
    container_name: grafana
    networks:
      - ipbrick-v8
    hostname: '${URL_GRAFANA}'
    ports:
      - 15500:3000
    environment:
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=postgres:5432
      - GF_DATABASE_NAME=grafana_db
      - GF_DATABASE_USER=${POSTGRESQL_USERNAME}
      - GF_DATABASE_PASSWORD=${POSTGRESQL_PASSWORD}
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    depends_on:
      - postgres
    volumes:
      - grafana_storage:/var/lib/grafana
    restart: always

#########################################################################################################################
##                                                                                                                     ##
##                                                         GITLAB                                                      ##
##                                                                                                                     ##
#########################################################################################################################
  gitlab:
    image: gitlab/gitlab-ce:17.3.1-ce.0
    container_name: gitlab
    hostname: '${URL_GITLAB}'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://${URL_GITLAB}'
        nginx['listen_https'] = false
        nginx['redirect_http_to_https'] = false
        nginx['listen_port'] = 8181
        # Gitlab root password
        gitlab_rails['initial_root_password']='${GITLAB_PASS}'
        # LDAP configuration
        gitlab_rails['ldap_enabled'] = true
        gitlab_rails['ldap_label'] = 'LDAP'
        gitlab_rails['ldap_host'] = '${GITLAB_LDAP_HOST}'
        gitlab_rails['ldap_port'] = ${GITLAB_PORT}
        gitlab_rails['ldap_uid'] = '${GITLAB_UID}'
        gitlab_rails['ldap_method'] = '${GITLAB_METHOD}'
        gitlab_rails['ldap_bind_dn'] = '${GITLAB_BIND}'
        gitlab_rails['ldap_password'] = '${GITLAB_LDAP_PASS}'
        gitlab_rails['ldap_allow_username_or_email_login'] = true
        gitlab_rails['ldap_base'] = '${GITLAB_LDAP_BASE}'
    ports:
      - '15320:8181'
      - '15321:443'
      - '15322:22'
    volumes:
      - gitlab-install:/etc/gitlab
      - gitlab-logs:/var/log/gitlab
      - gitlab-data:/var/opt/gitlab
    shm_size: '256m'
    restart: always
    networks:
      - ipbrick-v8
  
  dind:
    image: docker:27.3.1-dind
    restart: always
    privileged: true
    environment:
      DOCKER_TLS_CERTDIR: ""
    command:
      - --storage-driver=overlay2
    volumes:
      - ./data/dind/docker:/home1/_dockersRoot/

  gitlab-runner:
    restart: always
    image: gitlab/gitlab-runner:v17.5.3
    volumes:
      - ./config:/etc/gitlab-runner:z
      - ./data/runner/cache:/cache
        ###- /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOCKER_HOST=tcp://dind:2375

#########################################################################################################################
##                                                                                                                     ##
##                                                       KEYCLOAK                                                      ##
##                                                                                                                     ##
#########################################################################################################################
  keycloak:
    image: keycloak/keycloak:26.0
    networks:
      - ipbrick-v8
    container_name: keycloak_server
    environment:
      PROXY_ADDRESS_FORWARDING: true
      POSTGRES_USER: ${POSTGRESQL_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_DB: 'keycloak_db'
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
      KC_LOG_LEVEL: DEBUG
    command: >
      start --import-realm
      --proxy-headers=xforwarded
      --hostname=https://${URL_KEYCLOAK}
      --http-enabled=true
      --spi-cookie-same-site=None
    ports:
      - "15350:8080"
      - "15343:8443"
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./keycloak/imports:/opt/keycloak/data/import
    depends_on:
      - postgres
    restart: always

#########################################################################################################################
##                                                                                                                     ##
##                                                        OUTLINE                                                      ##
##                                                                                                                     ##
#########################################################################################################################
  outline:
    image: docker.getoutline.com/outlinewiki/outline:latest
    networks:
      - ipbrick-v8
    container_name: outline_server
    environment:
      NODE_ENV: production
      UTILS_SECRET: ${OUTLINE_UTILS_SECRET}
      SECRET_KEY: ${OUTLINE_SECRET_KEY}
      DATABASE_URL: postgres://${POSTGRESQL_USERNAME}:${POSTGRESQL_PASSWORD}@postgres:5432/outline_db
      DATABASE_CONNECTION_POOL_MIN:
      DATABASE_CONNECTION_POOL_MAX:
      PGSSLMODE: disable
      REDIS_URL: redis://redis:6379
      URL: https://${URL_OUTLINE}
      PORT: 3000
      # Keycloak OAuth
      OIDC_CLIENT_ID: outline
      OIDC_CLIENT_SECRET: PkIjqEKDZIJNtBFfln21SH9cHKyTYl80
      OIDC_AUTH_URI: https://${URL_KEYCLOAK}/realms/a2o/protocol/openid-connect/auth
      OIDC_TOKEN_URI: https://${URL_KEYCLOAK}/realms/a2o/protocol/openid-connect/token
      OIDC_USERINFO_URI: https://${URL_KEYCLOAK}/realms/a2o/protocol/openid-connect/userinfo
      OIDC_LOGOUT_URL: https://${URL_KEYCLOAK}/realms/a2o/protocol/openid-connect/logout
      OIDC_REDIRECT_URI: https://${URL_OUTLINE}/auth/oidc.callback
      FORCE_HTTPS: false
      WEB_CONCURRENCY: 1
      DEBUG: http
      LOG_LEVEL: info
      DEFAULT_LANGUAGE: en_US
      RATE_LIMITER_ENABLED: true
      RATE_LIMITER_REQUESTS: 1000
      RATE_LIMITER_DURATION_WINDOW: 60
      DEVELOPMENT_UNSAFE_INLINE_CSP: false
      # Local File Storage
      FILE_STORAGE: local
      FILE_STORAGE_UPLOAD_MAX_SIZE: 52428800 #50MB
      FILE_STORAGE_IMPORT_MAX_SIZE: 5120000
    ports:
      - "15430:3000"
    depends_on:
      - postgres
      - redis
      - keycloak
    restart: always

#########################################################################################################################
##                                                                                                                     ##
##                                                         WEKAN                                                       ##
##                                                                                                                     ##
#########################################################################################################################
  wekan:
    image: wekanteam/wekan:v7.59
    networks:
      - ipbrick-v8
    container_name: wekan-app
    restart: always
    ports:
      - 15250:8080
    environment:
      WRITABLE_PATH: /data
      MONGO_URL: mongodb://wekandb:27017/wekan
      ROOT_URL: ${WEKAN_ROOT_URL}
      MAIL_URL: smtp://${WEKAN_MAIL_URL}/?ignoreTLS=true&tls={rejectUnauthorized:false}
      MAIL_FROM: Wekan Notifications <noreply.wekan@${SUBDOMAIN}>
      WITH_API: true
      RICHER_CARD_COMMENT_EDITOR: false
      CARD_OPENED_WEBHOOK_ENABLED: false
      BIGEVENTS_PATTERN: NONE
      BROWSER_POLICY_ENABLED: true
      DEFAULT_AUTHENTICATION_METHOD: ldap
      LDAP_ENABLE: true
      LDAP_PORT: ${WEKAN_LDAP_PORT}
      LDAP_HOST: '${WEKAN_LDAP_HOST}'
      LDAP_USER_AUTHENTICATION: true
      LDAP_USER_AUTHENTICATION_FIELD: '${WEKAN_LDAP_FILED}'
      LDAP_BASEDN: '${WEKAN_LDAP_BASEDN}'
      LDAP_RECONNECT: true
      LDAP_AUTHENTIFICATION: true
      LDAP_AUTHENTIFICATION_USERDN: '${WEKAN_LDAP_USERDN}'
      LDAP_AUTHENTIFICATION_PASSWORD: '${WEKAN_LDAP_PASSWORD}'
      LDAP_LOG_ENABLED: true
      LDAP_ENCRYPTION: false
      LDAP_USER_SEARCH_FILTER: (&(objectClass=inetOrgPerson))
      LDAP_USER_SEARCH_SCOPE: one
      LDAP_USER_SEARCH_FIELD: '${WEKAN_LDAP_FILED}'
      LDAP_USERNAME_FIELD: '${WEKAN_LDAP_FILED}'
      LDAP_FULLNAME_FIELD: cn
      LDAP_EMAIL_FIELD: mail
    depends_on:
      - wekandb
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - wekan-files:/data:rw

#########################################################################################################################
##                                                                                                                     ##
##                                                       DATABASES                                                     ##
##                                                                                                                     ##
#########################################################################################################################
# POSTGRES
  postgres:
    image: postgres:12.22
    container_name: postgres_server
    ports:
      - "5432:5432"
    networks:
      - ipbrick-v8
    volumes:
      - database-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: ${POSTGRESQL_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_DB: outline
    restart: always
# WEKAN
  wekandb:
    image: mongo:6
    networks:
      - ipbrick-v8
    container_name: wekan-db
    restart: always
    command: mongod --logpath /dev/null --oplogSize 128 --quiet
    expose:
      - 27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - wekan-db:/data/db
      - wekan-db-dump:/dump

# REDIS
  redis:
    image: redis:7.4
    container_name: outline_redis
    ports:
      - "6379:6379"
    networks:
      - ipbrick-v8
    volumes:
      - ./redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3
    restart: always

#########################################################################################################################
##                                                                                                                     ##
##                                                        VOLUMES                                                      ##
##                                                                                                                     ##
#########################################################################################################################
volumes:
  database-data:
  keycloak_data:
  grafana_storage: {}
  gitlab-install: {}
  gitlab-logs: {}
  gitlab-data: {}
  wekan-files:
    driver: local
  wekan-db:
    driver: local
  wekan-db-dump:
    driver: local
  portainer_data:
    driver: local

networks:
  ipbrick-v8:
    driver: bridge

